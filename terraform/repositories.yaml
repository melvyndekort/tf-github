repositories:
  assets:
    type: public
    description: "This repository contains my static resources site"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_assets

  bitbucket-sync:
    type: private
    description: "Sync all non-archived bitbucket repositories to local machine"

  cheatsheets:
    type: public
    description: "Documentation used in my custom Arch setup"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_cheatsheets

  cloudsetup:
    type: private
    description: "Terraform repository of my personal Cloud environments"

  dockersetup:
    type: private
    description: "Docker stacks to run all lmserver software"
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_dockersetup_role_arn
      - name: CLOUDFLARE_CLIENT_ID
        value_ref: tf_cloudflare.github_actions_client_id
      - name: CLOUDFLARE_CLIENT_SECRET
        value_ref: tf_cloudflare.github_actions_client_secret

  dotfiles:
    type: public
    description: "This repository contains all the important dotfiles in my Linux home directory based on the chezmoi dotfile manager."

  dracula-hugo-theme:
    type: public
    description: "My Dracula theme for Hugo static site generator"

  "example.melvyn.dev":
    type: public
    description: "Example static website"

  get-cookies:
    type: public
    description: "A serverless authentication solution which converts JWT tokens to AWS Cloudfront signed cookies"
    secrets:
      - name: CODECOV_TOKEN
        value_ref: secrets.codecov.get-cookies-token

  ignition:
    type: public
    description: "This repository contains my ignition files for Fedora CoreOS"
    allowed_actions_config: []
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_ignition_role_arn
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_ignition

  image-refresher:
    type: public
    description: "Docker container which updates specified docker images on the local system"
    secrets:
      - name: CODECOV_TOKEN
        value_ref: secrets.codecov.image-refresher-token

  lmgateway:
    type: public
    description: "Tiny bastion EC2 server"
    secrets:
      - name: DOCKER_USERNAME
        value_ref: docker_username
      - name: DOCKER_PASSWORD
        value_ref: docker_password

  mdekort-nl:
    type: public
    description: "Public website"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_mdekort_nl

  "melvyndekort.github.io":
    type: custom
    description: "My personal blog"
    visibility: public
    has_issues: false
    pages:
      branch: gh-pages
    default_branch: gh-pages

  melvyn-dev:
    type: public
    description: "Public website"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_melvyn_dev

  mta-sts:
    type: public
    description: "This repository contains my MTA-STS configuration"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_mta_sts

  password-store:
    type: private
    description: "Password management should be simple and follow Unix philosophy"

  scheduler:
    type: public
    description: "Run scheduled jobs in Docker and trigger them manually via a web interface"
    secrets:
      - name: CODECOV_TOKEN
        value_ref: secrets.codecov.scheduler-token

  startpage:
    type: private
    description: "Public website"
    secrets:
      - name: CLOUDFLARE_ACCOUNT_ID
        value_ref: cloudflare_account_id
      - name: CLOUDFLARE_API_TOKEN
        value_ref: tf_cloudflare.api_token_startpage

  systemsetup:
    type: private
    description: "My custom system setup using Ansible"

  tf-aws:
    type: public
    description: "Manage centralized AWS resources using Terraform"
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_tf_aws_role_arn

  tf-cloudflare:
    type: public
    description: "Centrally manage cloudflare configuration"
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_tf_cloudflare_role_arn

  tf-github:
    type: public
    description: "Centrally manage github configuration"
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_tf_github_role_arn

  tf-minecraft:
    type: public
    description: "A Minecraft server on AWS ECS"
    secrets:
      - name: AWS_ROLE_ARN
        value_ref: github_actions_tf_minecraft_role_arn
